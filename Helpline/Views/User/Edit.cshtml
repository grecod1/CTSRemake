@model Helpline.ViewModels.UserViewModels.UpdateUserViewModel

@{
    ViewBag.Title = Model.UserName;
    SelectList roleList = new SelectList(Model.Select_Role, "Id", "Name");
    SelectList officeLocationList = new SelectList(Model.Select_OfficeLocations, "Id", "Name");
    SelectList statusList = new SelectList(Model.Select_Status, "Id", "Name");

    int ViewOnlyId = Model.Select_Role.Where(r => r.Name == "View Only").Select(r => r.Id).FirstOrDefault();

}

@using (Html.BeginForm())
{
    

    <input id="viewOnlyId" type="hidden" value="@ViewOnlyId" />
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    <fieldset>
        <h3 class="text-center">Edit @Model.FirstName  @Model.LastName</h3>
        @if (TempData["Invalid"] != null)
        {
            <p class="text-danger">@TempData["Invalid"]</p>
        }
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="form-group col-12 col-lg-6">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "form-control-label" })
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control userField", @placeholder = "Last name and first initial only" } })
                    @Html.ValidationMessageFor(model => model.UserName, null, new { @class = "text-danger" })
                    <span class="text-danger">@TempData["Error"]</span>
                </div>
                <div class="form-group col-12 col-sm-6 col-lg-3">
                    @Html.LabelFor(model => model.RoleId, new { @class = "form-control-label" })
                    @Html.DropDownListFor(model => model.RoleId, roleList, "Select A Role", new { @class = "form-control userField" })
                    @Html.ValidationMessageFor(model => model.RoleId, null, new { @class = "text-danger" })
                </div>
                <div class="form-group col-12 col-sm-6 col-lg-3">
                    @Html.LabelFor(model => model.OfficeLocationId, new { @class = "form-control-label" })
                    @Html.DropDownListFor(model => model.OfficeLocationId, officeLocationList, "Select Office Location", new { @class = "form-control userField" })
                    @Html.ValidationMessageFor(model => model.OfficeLocationId, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="form-group col-lg-6">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "form-control-label" })
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control userField" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="form-group col-sm-6">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "form-control-label" })
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control userField" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-sm-6 col-lg-3">
                    @Html.LabelFor(model => model.StatusId, new { @class = "form-control-label" })
                    @Html.DropDownListFor(model => model.StatusId, statusList, new { @class = "form-control " })
                </div>
            </div>
            <div class="row">
                <div class="form-group col-3 col-lg-1 pr-0">
                    <input id="submit" type="submit" value="Update" class="btn btn-success" />
                </div>
                <div class="form-group col-3 col-lg-2">
                    @Html.ActionLink("Back to list", "Index", "User", null, new { @class = "btn btn-primary" })
                </div>
                <div class="form-group col-6 col-lg-3">
                    @if (TempData["AlertSuccess"] != null)
                    {
                        <div class="alert alert-success bg-success text-light text-center alert-fade" role="alert">
                            @TempData["AlertSuccess"]
                        </div>
                    }
                    else if (TempData["AlertPreExist"] != null)
                    {
                        <div class="alert alert-danger text-center" role="alert">
                            @TempData["AlertPreExist"]
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </fieldset>

}
    

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/UserEdit.js"></script>
}

  