@model Helpline.ViewModels.UserViewModels.UpdateUserViewModel

@{
    ViewBag.Title = "Create User";
    SelectList roleList = new SelectList(Model.Select_Role, "Id", "Name");
    SelectList officeLocationList = new SelectList(Model.Select_OfficeLocations, "Id", "Name");
}

@using (Html.BeginForm("Create", "User", FormMethod.Post))
{    
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.IsActive)
    <fieldset>
        <h3 class="text-center">Add User</h3>
        @if(TempData["Invalid"] != null)
        {
            <p class="text-danger">@TempData["Invalid"]</p>
        }
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="form-group col-12 col-lg-6">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "form-control-label" })
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control"} })
                    @Html.ValidationMessageFor(model => model.UserName, null, new { @class = "text-danger" })
                </div>
                <div class="form-group col-12 col-sm-6 col-lg-3">
                    @Html.LabelFor(model => model.RoleId, new {@class = "form-control-label" })
                    @Html.DropDownListFor(model => model.RoleId, roleList, "Select A Role", new {@class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RoleId, null, new {@class = "text-danger" })                    
                </div>
                <div class="form-group col-12 col-sm-6 col-lg-3">
                    @Html.LabelFor(model => model.OfficeLocationId, new {@class ="form-control-label" })
                    @Html.DropDownListFor(model => model.OfficeLocationId, officeLocationList, "Select Office Location", new {@class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OfficeLocationId, null, new {@class ="text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="form-group col-lg-6">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "form-control-label" })
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="form-group col-lg-6">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "form-control-label" })
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-12 col-lg-3">
                    <input type="submit" value="Create" class="btn btn-success text-light mr-1" />
                    @Html.ActionLink("Back to List", "Index", "User", null, new { @class = "btn btn-primary" })
                </div>
                
                @if (TempData["Alert"] != null)
                {
                    <div class="col-sm-3">
                        <div class="alert alert-danger text-center" role="alert">
                            @TempData["Alert"]
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                    </div>
                }

            </div>
        </div>
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

    <script src="~/Scripts/AlertFade.js"></script>

