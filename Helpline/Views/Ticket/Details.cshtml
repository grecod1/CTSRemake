@model Helpline.ViewModels.TicketViewModels.TicketDetailsViewModel

@{
    ViewBag.Title = $"Ticket #{Model.TicketId} ";
    string statusColor;
    if (Model.Status == "Complete")
    {
        statusColor = "text-success";
    }
    else if (Model.Status == "Disabled")
    {
        statusColor = "text-danger";
    }
    else
    {
        statusColor = "text-warning";
    }
}

<div class="row justify-content-center">
    <div class="card card-light col-xl-10">
        <div class="card-header text-center">
            @if (Model.PostEnabled || Model.IsAdministrator)
            {
                <a class="btn btn-primary" href="/Ticket/Edit/@Model.TicketId"><span class="fa fa-edit mr-2"></span> Edit Ticket</a>
                <a class="btn btn-primary" href="/Ticket/Images/@Model.TicketId"><span class="fa fa-file-picture-o mr-2"></span>Manage Images</a>
            }
            @if (Model.FromIndex)
            {
                <a class="btn btn-primary" href="/ticket"><span class="fa fa-undo"></span> Back to List</a>
            }
            else
            {
                @Html.ActionLink("Back To List", "Index", "Ticket", null, new { @class = "btn btn-primary" })
            }
        </div>
        <div class="card-header text-center">
            <h2>@ViewBag.Title</h2>
            <h3 class="@statusColor">@Model.Status</h3>
        </div>
        @if (Model.TicketImageIds?.Count() > 0)
        {
            string active = "active";
            int index = 0;

            <div id="carouselImage" class="carousel carousel-fade mx-auto w-75 d-print-none" data-ride="carousel">
                <ol class="carousel-indicators">
                    @foreach (int imageId in Model.TicketImageIds)
                    {
                        if (index == 0)
                        {
                    <li data-target="#carousel-image" data-slide-to="0" class="active"></li>
                        }
                        else
                        {
                    <li data-target="#carousel-image" data-slide-to="@index"></li>
                        }
                        index++;
                    }
                </ol>
                <div class="carousel-inner">
                    @foreach (int imageId in Model.TicketImageIds)
                    {
                    <div class="carousel-item @active">
                        <img class="d-block w-100 img-fluid" src="/Ticket/Image/@imageId" alt="Ticket Image" style="width:600px; height:500px" />
                    </div>

                        active = "";
                    }
                </div>
                <a class="carousel-control-prev" href="#carouselImage" role="button" data-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <a class="carousel-control-next" href="#carouselImage" role="button" data-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </a>
            </div>
        }
        <div class="row">
            <div class="card-body col-lg-6">
                <h4 class="card-title">Ticket and Routing Information</h4>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item list-group-item-light"><strong>Tracking Number: </strong>@Model.TicketId</li>
                    <li class="list-group-item list-group-item-light"><strong>Created By: </strong> @Model.CreatedBy</li>
                    <li class="list-group-item list-group-item-light"><strong>Created On: </strong> @Model.CreationDate.ToString()</li>
                    <li class="list-group-item list-group-item-light"><strong>Communication Type: </strong>@Model.CommunicationTypeName</li>
                    <li class="list-group-item list-group-item-light"><strong>Request Type: </strong>@Model.RequestTypeName</li>
                    <li class="list-group-item list-group-item-light"><strong>Routing Category: </strong>@Model.CurrentRoute.Category</li>
                    @if (Model.ReferredFrom != null)
                    {
                        <li class="list-group-item list-group-item-light"><strong>How did the Caller Hear from us?: </strong>@Model.ReferredFrom</li>
                    }
                    @if (Model.Bureau != null)
                    {
                        <li class="list-group-item list-group-item-light"><strong>Bureau: </strong> @Model.Bureau</li>
                    }

                    <li class="list-group-item list-group-item-light"><strong>Program Name: </strong>@Model.CurrentRoute.Program</li>
                    <li class="list-group-item list-group-item-light"><strong>Route Last Updated On: </strong>@Model.CurrentRoute.CreationDate</li>
                    <li class="list-group-item list-group-item-light"><strong>Route Last Updated By: </strong>@Model.CurrentRoute.CreatedBy</li>
                </ul>
            </div>
            <div class="card-body col-lg-6">
                <h4 class="card-title">Contact Information</h4>


                @if (Model.FirstName != null || Model.LastName != null)
                {
                    <p><strong>Contact Name: </strong>@Model.FirstName @Model.LastName</p>
                    <hr />
                }
                else
                {
                    <p><strong>Contact Name: </strong>No Name Provided</p>
                    <hr />
                }


                @if (Model.Email != null)
                {
                    <p><strong>Email: </strong>@Model.Email</p>
                    <hr />
                }
                @if (Model.Affiliation != null)
                {
                    <p><strong>Affiliation: </strong>@Model.Affiliation</p>
                }
                @if (Model.Addresses != null && Model.Addresses?.Count() > 0)
                {
                    <div class="alert alert-light">
                        <h5 class="alert-heading p-2">Addresses</h5>
                        <div id="Addresses" class="list-group list-group-flush">
                            @foreach (var address in Model.Addresses)
                            {
                                <div class="list-group-item list-group-item-light">
                                    <h6>@address.AddressType</h6>
                                    @address.AdddressNumber @address.AddressStreetName @address.AptNumber
                                    <br />
                                    @address.City @address.State @address.Zip
                                    <div class="pull-right"><strong>County: </strong> @address.CountyName</div>
                                </div>
                            }

                        </div>
                    </div>
                }
                @if (Model.PhoneNumbers != null && Model.PhoneNumbers?.Count() > 0)
                {
                    <div class="alert alert-light">
                        <h5 class="alert-heading p-2">Phone Numbers</h5>
                        <div id="PhoneNumbers" class="list-group list-group-flush">
                            @foreach (var phoneNumber in Model.PhoneNumbers)
                            {

                                <div class="list-group-item list-group-item-light"><h6>@phoneNumber.PhoneNumberType</h6>   @phoneNumber.PhoneNumber</div>
                            }
                        </div>
                    </div>

                }

            </div>
        </div>
        <div class="row">
            <div class="card-body col-xl-7">
                <h4 class="card-title">Notes and Comments</h4>
                @if (Model.PostEnabled || Model.IsAdministrator)
                {
                    <strong>To add comments, please go to the <a class="card-link" href="/Ticket/Edit/@Model.TicketId">Edit Ticket page.</a> </strong>
                }
                @foreach (var note in Model.DisplayTicketNotes)
                {
                    <div class="alert alert-primary">
                        <h5 class="alert-heading">@note.UserName -  @note.CreationDate</h5>
                        <div>
                            @if (note.CreatedBy_UserName == User.Identity.Name && Model.PostEnabled || Model.IsAdministrator)
                            {
                                @Html.ActionLink("Edit", "EditNote", "Ticket", new { id = note.Id }, new { @class = "btn btn-sm btn-outline-primary pull-right" })
                            }
                            @if (note.CallerRemarks != null)
                            {
                                <h6 class="font-weight-bold">Caller Remarks</h6>
                                <p>@note.CallerRemarks</p>
                            }
                            @if (note.Resolutions != null)
                            {
                                <h6 class="font-weight-bold">Resolution</h6>
                                <p>@note.Resolutions</p>
                            }
                            @if (note.Comments != null)
                            {
                                <h6 class="font-weight-bold">Additional Comments</h6>
                                <p>@note.Comments</p>
                            }
                        </div>
                    </div>
                }

            </div>

            <div class="card-body col-xl-5">
                <h4 class="card-title">Previous Routing Information</h4>
                @if (Model.DisplayPreviousRoutes?.Count() <= 0)
                {
                    <strong>No previous routes</strong>
                }
                else
                {

                    foreach (var route in Model.DisplayPreviousRoutes)
                    {
                        <div class="alert alert-info">
                            <h5 class="alert-heading">@route.Category</h5>
                            <p><strong>Program: </strong>@route.Program</p>
                            <p><strong>Created By: </strong>@route.CreatedBy</p>
                            <p><strong>Creation Date: </strong>@route.CreationDate</p>

                        </div>

                    }
                }
            </div>
        </div>

    </div>
</div>




@if (TempData["Access"] != null)
{
    if (TempData["Access"].ToString() == "Denied")
    {
        <div id="modal" class="modal" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">You Cannot Edit this Note</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>
                            To edit this note you either have to be the user who created this note or be an administrator.
                        </p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    }
}
@if (Model.RoutingEmails != null && Model.EmailSent)
{
    <div id="modal" class="modal" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Emails were sent to the following addresses</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">

                    @foreach (string email in Model.RoutingEmails)
                    {
                        <p class="text-center"><span class="fa fa-paper-plane-o mr-1"></span> @email</p>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}


@section Scripts{
    @Scripts.Render("~/bundles/jqueryDetails")
}

