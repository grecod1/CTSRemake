@model Helpline.ViewModels.AdminViewModels.UpdateProgramViewModel

@{
    ViewBag.Title = Model.LongName;
}

@using (Html.BeginForm("Program", "Administrator", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ProgramId)
    <fieldset>
        <h3 class="text-center">@Model.LongName</h3>
        @if (TempData["Error"] != null)
        {
            <p class="text-danger">@TempData["Error"]</p>
        }
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="form-group col-12 col-sm-6 col-xl-5">
                    @Html.LabelFor(model => model.LongName, htmlAttributes: new { @class = "form-control-label" })
                    @Html.EditorFor(model => model.LongName, new { htmlAttributes = new { @class = "form-control userField" } })
                    @Html.ValidationMessageFor(model => model.LongName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-12 col-sm-6 col-xl-5">
                    @Html.LabelFor(model => model.ShortName, htmlAttributes: new { @class = "form-control-label" })
                    @Html.EditorFor(model => model.ShortName, new { htmlAttributes = new { @class = "form-control userField" } })
                    @Html.ValidationMessageFor(model => model.ShortName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-12 col-sm-6 col-xl-2">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
                    <select id="IsActive" class="form-control" name="IsActive">
                        @if (Model.IsActive)
                        {
                            <option selected value="True">Active</option>
                            <option value="False">Disabled</option>
                        }
                        else
                        {
                            <option value="True">Active</option>
                            <option selected value="False">Disabled</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="form-group col-12 col-xl-3">
                    <input id="submit" type="submit" value="Save" class="btn btn-success mr-1" />
                    @Html.ActionLink("Back to List", "Programs", "Administrator", null, new { @class = "btn btn-primary" })
                </div>
                <div class="col-xl-3">
                    @if (TempData["AlertSuccess"] != null)
                    {
                        <div class="alert alert-success bg-success text-light text-center alert-fade" role="alert">
                            @TempData["AlertSuccess"]
                        </div>
                    }
                    else if (TempData["AlertPreExist"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible text-center mb-0" role="alert">
                            Duplicate Entry
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </fieldset>


}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/AdminEdit")
}
